/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DadjokeIndexImport } from './routes/dadjoke.index'

// Create Virtual Routes

const DadjokeLazyImport = createFileRoute('/dadjoke')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const DadjokeLazyRoute = DadjokeLazyImport.update({
  id: '/dadjoke',
  path: '/dadjoke',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dadjoke.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DadjokeIndexRoute = DadjokeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DadjokeLazyRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/dadjoke': {
      id: '/dadjoke'
      path: '/dadjoke'
      fullPath: '/dadjoke'
      preLoaderRoute: typeof DadjokeLazyImport
      parentRoute: typeof rootRoute
    }
    '/dadjoke/': {
      id: '/dadjoke/'
      path: '/'
      fullPath: '/dadjoke/'
      preLoaderRoute: typeof DadjokeIndexImport
      parentRoute: typeof DadjokeLazyImport
    }
  }
}

// Create and export the route tree

interface DadjokeLazyRouteChildren {
  DadjokeIndexRoute: typeof DadjokeIndexRoute
}

const DadjokeLazyRouteChildren: DadjokeLazyRouteChildren = {
  DadjokeIndexRoute: DadjokeIndexRoute,
}

const DadjokeLazyRouteWithChildren = DadjokeLazyRoute._addFileChildren(
  DadjokeLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/dadjoke': typeof DadjokeLazyRouteWithChildren
  '/dadjoke/': typeof DadjokeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/dadjoke': typeof DadjokeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/dadjoke': typeof DadjokeLazyRouteWithChildren
  '/dadjoke/': typeof DadjokeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/dadjoke' | '/dadjoke/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/dadjoke'
  id: '__root__' | '/' | '/about' | '/dadjoke' | '/dadjoke/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  DadjokeLazyRoute: typeof DadjokeLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  DadjokeLazyRoute: DadjokeLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/dadjoke"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/dadjoke": {
      "filePath": "dadjoke.lazy.tsx",
      "children": [
        "/dadjoke/"
      ]
    },
    "/dadjoke/": {
      "filePath": "dadjoke.index.tsx",
      "parent": "/dadjoke"
    }
  }
}
ROUTE_MANIFEST_END */
